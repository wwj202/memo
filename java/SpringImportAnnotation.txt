
@Import只能用在类上，@Import通过快速导入的方式实现把实例加入spring的IOC容器中

@Import的三种用法
1、直接填class数组方式
2、ImportSelector方式【重点】
3、ImportBeanDefinitionRegistrar方式

1、直接填class数组方式
@Import({ 类名.class , 类名.class... })
public class TestDemo {
}

2、ImportSelector方式
a) 实现ImportSelector接口，在selectImports方法中返回要实例化并加入IOC容器的类
public class Myclass implements ImportSelector {
    @Override
    public String[] selectImports(AnnotationMetadata annotationMetadata) {
        return new String[]{"com.wwj.demo.TestDemo1"};
    }
}
b) 将Myclass用@Import引入
@Import({Myclass.class})
public class TestDemo {
}

3、ImportBeanDefinitionRegistrar方式
a) 实现ImportBeanDefinitionRegistrar接口，在registerBeanDefinitions方法中手动注册bean到IOC容器
public class Myclass implements ImportBeanDefinitionRegistrar {
    @Override
    public void registerBeanDefinitions(AnnotationMetadata annotationMetadata, BeanDefinitionRegistry beanDefinitionRegistry) {
        //指定bean定义信息（包括bean的类型、作用域...）
        RootBeanDefinition rootBeanDefinition = new RootBeanDefinition(TestDemo1.class);
        //注册一个bean指定bean名字（id）
        beanDefinitionRegistry.registerBeanDefinition("TestDemo11", rootBeanDefinition);
    }
}
b) 将Myclass用@Import引入
@Import({Myclass.class})
public class TestDemo {
}
